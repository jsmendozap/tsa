---
title: "Incremento del nivel medio del mar"
author: "Juan Sebastián Mendoza Páez"
institute: "Estudiante Ing. Forestal"
css: styles.css
format:
  revealjs:
    code-fold: true
    code-summary: 'Mostrar Código'
    footer: 'Series de Tiempo Univaridas'
    center: true
    embed-resources: true
    slide-number: true
---

```{r setup, include=FALSE}
knitr::opts_chunk$set(echo = T)
```

## ¿Por qué es importante? {.title}

:::{.callout-note appearance="simple"} 

## NASA
"Desde 1880, el nivel del mar global ha aumentado 20 centimetros. Para el 2100 se proyecta que aumente entre 30 y 122 centimetros más."

:::

## Bases de datos {.title}

::: {layout="[[30, 70], [100]]"}

## Fuentes

::: {.size}
- Oficina Nacional de Administración Oceánica y Atmosférica (NOAA)
- Organización de Investigación Científica e Industrial del Commonwealth (CSIRO)
:::

```{r}
#| echo: true

pacman::p_load(TSstudio, tsbox, tsoutliers, tidyverse, equatiomatic,
               lubridate, xts, magrittr, forecast, dygraphs)

url <- 'https://gml.noaa.gov/webdata/ccgg/trends/co2/co2_mm_mlo.txt'
cov <- read.table(file = url) %>%
  select(3, 4) %>%
  rename(fecha = 1, co2 = 2) %>%
  mutate(fecha = date_decimal(fecha) %>%
           floor_date(unit = 'month')) %>%
  filter(fecha <= '2013-12-01')

data <- read.csv('gmsl.csv') %>%
  mutate(fecha = date_decimal(Time) %>%
           floor_date(unit = 'month')) %>%
  rename(gsml = 2) %>%
  select(4, 2)%>%
  filter(fecha > '1958-02-01') %>%
  left_join(y = cov) %>%
  {xts(x = .[,2:3], order.by = .$fecha)}

rm(cov)

dygraph(data, main = 'Nivel medio del mar global vs
        Concentración de CO2 en la atmósfera', height = 400) %>%
  dySeries("co2", axis = 'y2', label = 'CO2') %>%
  dySeries('gsml', label = 'GSML') %>%
  dyAxis('y', label = 'Nivel del mar (mm)') %>%
  dyAxis('y2', label = 'CO2 (ppm)', independentTicks = T) %>%
  dyRangeSelector()
```
:::

```{r}
#| output: false
#| echo: false

ts_split(ts.obj = ts_ts(data), sample.out = 12) %T>%
  {assign(x = "train", value = .$train, envir = .GlobalEnv)} %T>%
  {assign(x = "test", value = .$test, envir = .GlobalEnv)}
```

## Estacionalidad y prueba de raíces unitarias {.title}

::: {layout="[50, 50]"}

```{r}
#| echo: true

acf(train[,'gsml'], main = '')
```

```{r}
tseries::adf.test(x = train[,'gsml'])
```
:::

## Modelos {.title}

::: {.panel-tabset}

### Modelo con covariable

```{r}
#| echo: true

matriz_diseño <- model.matrix(~ -1 + train[,'co2'])
colnames(matriz_diseño) <- 'co2'

modelo <- Arima(y = train[,'gsml'], 
                order = c(2,1,3),
                xreg = matriz_diseño,
                include.drift = T)

modelo %>% lmtest::coeftest()
```
```{r}
#| echo: false

cat('AIC:', AIC(modelo))
```


### Modelo sin covariable

```{r}
mod <- Arima(y = train[,'gsml'], 
                order = c(2,1,3),
                include.drift = T)

mod %>% lmtest::coeftest()
```

```{r}
#| echo: false

cat('AIC:', AIC(mod))
```

### Modelo no paramétrico

```{r}
holt <- holt(y = train[,'gsml'], h = 12, initial = 'optimal')
holt$model
```
:::

## Modelos {.title}

::: {.panel-tabset}

### Modelo con convariables

```{r}
extract_eq(modelo, wrap = T, use_coefs = T)
```
### Modelo sin covariables

$$( 1 \ - \ 0.79B \ + \ 0.09B^2) \ \cdot \ (1 - B) \ \cdot \ (y_t - 0.19t) \\ =  (1 \ - \ 0.34B \ + \ 0.2B^2 \ - \ 0.69B^3) \ \cdot \ \epsilon_t$$
:::

## Supuestos {.title}

::: columns

::: {.column width="60%"}
```{r}
#| echo: true

mod %>%
  checkresiduals(theme = theme_bw(), test = F)
```
:::

::: {.column width="40%"}
```{r}
#| echo: true

mod %>%
  residuals() %>%
  shapiro.test()

mod %>%
  residuals() %>%
  Box.test(type = 'Ljung-Box')
```
:::

:::


## Outliers {.title}

```{r}
#| echo: true

tso(y = train[,'gsml'], xreg = train[,'co2'], tsmethod = 'auto.arima', args.tsmethod = list(stepwise = F, approximation = F))
```

## Predicciones {.title}

::: {.panel-tabset}

### Modelo paramétrico

::: {layout="[60, 40]" layout-valign="center"}

```{r}
#| echo: true
#| warning: false

prediccion <- forecast(object = modelo, h = 12, level = 95, xreg = test[,'co2'])

serie <- prediccion %>%
  as_tibble() %>%
  ts(start = c(2013, 1), end = c(2013, 12), frequency = 12) %>%
  {cbind(data[, 'gsml'], .)}

colnames(serie) <- c('gsml', 'predicho', 'lwr', 'upr')

serie %>%
  dygraph(height = 350) %>%
  dySeries('gsml', label = 'Observada') %>% 
  dySeries(c('lwr', 'predicho', 'upr'), label = 'Predicho') %>%
  dyRangeSelector()
```

```{r}
#| echo: true

accuracy(prediccion, test[,'gsml'])[,c(2,5)]
```
:::

### Modelo no paramétrico

::: {layout="[60, 40]" layout-valign="center"}

```{r}
#| echo: true
#| warning: false

serie <- holt %>%
  as_tibble() %>%
  select(1, 4, 5) %>%
  rename(predico = 1, lwr = 2, upr = 3) %>%
  ts(start = c(2013, 1), end = c(2013, 12), frequency = 12) %>%
  {cbind(data[, 'gsml'], .)}

colnames(serie) <- c('gsml', 'predicho', 'lwr', 'upr')

serie %>%
  dygraph(height = 350) %>%
  dySeries('gsml', label = 'Observada') %>% 
  dySeries(c('lwr', 'predicho', 'upr'), label = 'Predicho') %>%
  dyRangeSelector()
```

```{r}
#| echo: true

accuracy(holt, test[,'gsml'])[,c(2,5)]
```
:::

:::

## Gracias {.title}